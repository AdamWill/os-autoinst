#!/bin/sh -x
# this script configures openvswitch for use with os-autoinst:
# * create the bridge
# * add (existing) tap devices
# * configure connection to 10.0.2.2 that works across VLANs
#

# delete existing configuration
ovs-vsctl --if-exists del-br br0

#create bridge
ovs-vsctl add-br br0

# connect with other hosts
#ovs-vsctl add-port br0 gre0 -- set interface gre0 type=gre options:remote_ip=<IP address of other host>


# add tap devices, use vlan 999 by default, the vlan number is supposed to be changed when the vm starts
ovs-vsctl add-port br0 tap0 tag=999
ovs-vsctl add-port br0 tap1 tag=999
ovs-vsctl add-port br0 tap2 tag=999
ovs-vsctl add-port br0 tap3 tag=999
ovs-vsctl add-port br0 tap4 tag=999


# the VM have unique MAC that differs in the last 16 bits (see /usr/lib/os-autoinst/backend/qemu.pm)
# the IP can conflict across vlans
# to allow connection from VM  to host os-autoinst (10.0.2.2), we have to do some IP translation
# we use simple scheme:
# MAC 52:54:00:12:XX:YY -> IP 10.1.XX.YY

# br0 has IP 10.0.2.2 and netmask /15 that covers 10.0.0.0 and 10.1.0.0 ranges
# this should be also configured permanently in /etc/sysconfig/network
ip addr add 10.0.2.2/15 dev br0
ip route add 10.0.0.0/15 dev br0
ip link set br0 up

# openflow ports:
#  LOCAL = br0
#  1,2,3 ... tap devices

# cleanup
ovs-ofctl del-flows br0

#default: normal action
ovs-ofctl add-flow br0 'table=0,priority=0,action=normal'

#reply packets from local port are handled by learned rules in table 1
ovs-ofctl add-flow br0 'table=0,priority=1,in_port=LOCAL,actions=resubmit(,1)'

#
#arp 10.0.2.2 - learn rule for handling replies, rewrite ARP sender IP to 10.1.x.x range and send to local
# the learned rule rewrites ARP target to the original IP and sends the packet to the original port
ovs-ofctl add-flow br0 'table=0,priority=100,dl_type=0x0806,nw_dst=10.0.2.2,actions=learn(table=1,priority=100,in_port=LOCAL,dl_type=0x0806,NXM_OF_ETH_DST[]=NXM_OF_ETH_SRC[],load:NXM_OF_ARP_SPA[]->NXM_OF_ARP_TPA[],output:NXM_OF_IN_PORT[]),load:0xa010000->NXM_OF_ARP_SPA[],move:NXM_OF_ETH_SRC[0..15]->NXM_OF_ARP_SPA[0..15],local'

#tcp 10.0.2.2 syn - learn rule for handling replies, rewrite source IP to 10.1.x.x range and send to local
# the learned rule rewrites DST to the original IP and sends the packet to the original port
ovs-ofctl add-flow br0 'table=0,priority=100,dl_type=0x0800,tcp_flags=+syn-ack,nw_dst=10.0.2.2,actions=learn(table=1,priority=100,in_port=LOCAL,dl_type=0x0800,NXM_OF_ETH_DST[]=NXM_OF_ETH_SRC[],load:NXM_OF_IP_SRC[]->NXM_OF_IP_DST[],output:NXM_OF_IN_PORT[]),mod_nw_src:10.1.0.0,move:NXM_OF_ETH_SRC[0..15]->NXM_OF_IP_SRC[0..15],local'

#tcp 10.0.2.2 other - rewrite source IP to 10.1.x.x range and send to local
ovs-ofctl add-flow br0 'table=0,priority=99,dl_type=0x0800,nw_dst=10.0.2.2,actions=mod_nw_src:10.1.0.0,move:NXM_OF_ETH_SRC[0..15]->NXM_OF_IP_SRC[0..15],local'


# show the configuration
ovs-vsctl show
ovs-ofctl show br0
ovs-ofctl dump-flows br0
